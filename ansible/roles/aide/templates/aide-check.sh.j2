#!/bin/bash
# AIDE integrity check script for {{ ansible_hostname }}
# Generated by Ansible

set -euo pipefail

# Configuration
AIDE_CONFIG="/etc/aide/aide.conf"
AIDE_DB="/var/lib/aide/aide.db"
AIDE_DB_NEW="/var/lib/aide/aide.db.new"
REPORT_DIR="{{ aide_report_dir | default('/var/lib/aide/reports') }}"
LOG_FILE="/var/log/aide/aide-check.log"
TIMESTAMP=$(date +%Y%m%d_%H%M%S)
REPORT_FILE="${REPORT_DIR}/aide-report-${TIMESTAMP}.txt"

# Email settings
{% if aide_email_alerts | default(false) %}
SEND_EMAIL=true
EMAIL_TO="{{ aide_email_to | default('root@localhost') }}"
EMAIL_FROM="{{ aide_email_from | default('aide@' + ansible_hostname) }}"
EMAIL_SUBJECT="AIDE Integrity Check Report - {{ ansible_hostname }}"
{% else %}
SEND_EMAIL=false
{% endif %}

# Logging function
log_message() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" | tee -a "$LOG_FILE"
}

# Create directories if they don't exist
mkdir -p "$REPORT_DIR"
mkdir -p "$(dirname "$LOG_FILE")"

log_message "Starting AIDE integrity check"

# Check if AIDE database exists
if [[ ! -f "$AIDE_DB" ]]; then
    log_message "AIDE database not found. Initializing..."
    if LC_ALL=C LANG=C aide --config="$AIDE_CONFIG" --init; then
        log_message "AIDE database initialization successful"
        if [[ -f "$AIDE_DB_NEW" ]]; then
            mv "$AIDE_DB_NEW" "$AIDE_DB"
            log_message "AIDE database moved to production location"
        fi
    else
        log_message "ERROR: AIDE database initialization failed"
        exit 1
    fi
fi

# Run AIDE check
log_message "Running AIDE integrity check..."
if LC_ALL=C LANG=C aide --config="$AIDE_CONFIG" --check > "$REPORT_FILE" 2>&1; then
    AIDE_EXIT_CODE=0
    log_message "AIDE check completed successfully - no changes detected"
else
    AIDE_EXIT_CODE=$?
    case $AIDE_EXIT_CODE in
        1)
            log_message "AIDE detected changes - see report: $REPORT_FILE"
            ;;
        2|3|4|5|6|7)
            log_message "AIDE check completed with exit code $AIDE_EXIT_CODE - see report: $REPORT_FILE"
            ;;
        *)
            log_message "ERROR: AIDE check failed with exit code $AIDE_EXIT_CODE"
            ;;
    esac
fi

# Add timestamp and hostname to report
{
    echo "AIDE Integrity Check Report"
    echo "Hostname: {{ ansible_hostname }}"
    echo "Date: $(date)"
    echo "Exit Code: $AIDE_EXIT_CODE"
    echo "=========================="
    echo ""
    cat "$REPORT_FILE"
} > "${REPORT_FILE}.tmp" && mv "${REPORT_FILE}.tmp" "$REPORT_FILE"

# Email report if configured and changes detected
if [[ "$SEND_EMAIL" == "true" && $AIDE_EXIT_CODE -ne 0 ]]; then
    if command -v mail >/dev/null 2>&1; then
        mail -s "$EMAIL_SUBJECT" -r "$EMAIL_FROM" "$EMAIL_TO" < "$REPORT_FILE"
        log_message "Email report sent to $EMAIL_TO"
    else
        log_message "WARNING: mail command not available, cannot send email"
    fi
fi

# Cleanup old reports (keep last {{ aide_report_retention_days | default(30) }} days)
find "$REPORT_DIR" -name "aide-report-*.txt" -type f -mtime +{{ aide_report_retention_days | default(30) }} -delete 2>/dev/null || true

# Cleanup old logs (keep last 7 days)
find "$(dirname "$LOG_FILE")" -name "*.log" -type f -mtime +7 -delete 2>/dev/null || true

log_message "AIDE integrity check completed"

exit $AIDE_EXIT_CODE